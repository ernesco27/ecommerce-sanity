/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Banner = {
  _id: string;
  _type: "banner";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  subTitle?: string;
  description?: string;
  imageUrl?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  slug?: Slug;
  link?: string;
  buttonText?: string;
  displayOrder?: number;
  isActive?: boolean;
  startDate?: string;
  endDate?: string;
  bannerType?: "hero" | "promo" | "category" | "sale";
  textColor?: string;
  backgroundColor?: string;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageType?:
    | "about"
    | "contact"
    | "terms"
    | "privacy"
    | "shipping"
    | "return"
    | "faq"
    | "custom";
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  >;
  sections?: Array<{
    sectionTitle?: string;
    sectionContent?: Array<
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
          listItem?: "bullet";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
        }
    >;
    _key: string;
  }>;
  seo?: {
    metaTitle?: string;
    metaDescription?: string;
    keywords?: Array<string>;
  };
  lastUpdated?: string;
  isPublished?: boolean;
};

export type Cart = {
  _id: string;
  _type: "cart";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  user?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "user";
  };
  items?: Array<{
    product?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "product";
    };
    productVariant?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "productVariant";
    };
    quantity?: number;
    _key: string;
  }>;
  subtotal?: number;
  appliedDiscounts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "discount";
  }>;
  lastUpdated?: string;
  status?: "active" | "abandoned" | "converted";
};

export type OrderItem = {
  _id: string;
  _type: "orderItem";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  product?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "product";
  };
  productVariant?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "productVariant";
  };
  quantity?: number;
  price?: number;
  totalPrice?: number;
  appliedDiscount?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "discount";
  };
};

export type Order = {
  _id: string;
  _type: "order";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  orderNumber?: string;
  user?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "user";
  };
  items?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "orderItem";
  }>;
  totalAmount?: number;
  status?: "pending" | "processing" | "shipped" | "delivered" | "cancelled";
  shippingAddress?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "address";
  };
  billingAddress?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "address";
  };
  paymentInfo?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "payment";
  };
  shippingMethod?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "shippingMethod";
  };
  orderNotes?: string;
  createdAt?: string;
  updatedAt?: string;
};

export type ShippingMethod = {
  _id: string;
  _type: "shippingMethod";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  description?: string;
  price?: number;
  estimatedDays?: number;
  isAvailable?: boolean;
  restrictions?: Array<string>;
  countries?: Array<string>;
};

export type Payment = {
  _id: string;
  _type: "payment";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  paymentMethod?: "credit_card" | "paypal" | "bank_transfer" | "cod";
  amount?: number;
  currency?: string;
  status?: "pending" | "completed" | "failed" | "refunded";
  transactionId?: string;
  paymentDate?: string;
  notes?: string;
};

export type Address = {
  _id: string;
  _type: "address";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  addressType?: "shipping" | "billing" | "both";
  user?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "user";
  };
  fullName?: string;
  addressLine1?: string;
  addressLine2?: string;
  city?: string;
  state?: string;
  postalCode?: string;
  country?: string;
  phone?: string;
  isDefault?: boolean;
};

export type RelatedProduct = {
  _id: string;
  _type: "relatedProduct";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  link?: string;
  slug?: Slug;
  product?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "product";
  };
};

export type ProductWishlist = {
  _id: string;
  _type: "productWishlist";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  product?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "product";
  };
  user?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "user";
  };
  addedAt?: string;
  notes?: string;
  variant?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "productVariant";
  };
  notifyWhenAvailable?: boolean;
  notifyOnPriceChange?: boolean;
};

export type ReviewImage = {
  _id: string;
  _type: "reviewImage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
  altText?: Array<string>;
  user?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "user";
  };
};

export type ProductReview = {
  _id: string;
  _type: "productReview";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  reviewTitle?: string;
  rating?: number;
  reviewDetails?: string;
  user?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "user";
  };
  product?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "product";
  };
  productVariant?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "productVariant";
  };
  verifiedPurchase?: boolean;
  images?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "reviewImage";
  }>;
  helpfulVotes?: number;
  status?: "pending" | "approved" | "rejected";
  reviewDate?: string;
  lastModified?: string;
};

export type User = {
  _id: string;
  _type: "user";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  firstName?: string;
  lastName?: string;
  email?: string;
  phone?: string;
  photo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  accountStatus?: "active" | "inactive" | "suspended" | "pending";
  accountType?: "regular" | "premium" | "business";
  dateJoined?: string;
  lastLogin?: string;
  preferences?: {
    language?: "en" | "es" | "fr";
    currency?: "USD" | "EUR" | "GBP";
    notifications?: {
      email?: boolean;
      sms?: boolean;
      push?: boolean;
    };
  };
  marketingPreferences?: {
    emailMarketing?: boolean;
    smsMarketing?: boolean;
    personalization?: boolean;
    thirdPartySharing?: boolean;
  };
  productReviews?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "productReview";
  }>;
  wishlist?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "productWishlist";
  }>;
  productLikes?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "product";
  }>;
};

export type VariantStock = {
  _type: "variantStock";
  color?: string;
  hexCode?: Color;
  stock?: number;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
};

export type ProductImage = {
  _id: string;
  _type: "productImage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
    _key: string;
  }>;
  altText?: Array<string>;
  product?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "product";
  };
};

export type ProductVariantValue = {
  _id: string;
  _type: "productVariantValue";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  type?: "size" | "color";
  size?: string;
  colorName?: string;
  hexCode?: string;
};

export type ProductVariant = {
  _id: string;
  _type: "productVariant";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  size?: string;
  price?: number;
  salesPrice?: number;
  variantStocks?: Array<
    {
      _key: string;
    } & VariantStock
  >;
};

export type Product = {
  _id: string;
  _type: "product";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  seo?: {
    metaTitle?: string;
    metaDescription?: string;
    keywords?: Array<string>;
  };
  description?: string;
  fullDescription?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
      }
  >;
  baseStock?: number;
  price?: number;
  salesPrice?: number;
  sku?: string;
  taxInfo?: {
    taxCategory?: "standard" | "reduced" | "zero" | "exempt";
    taxRate?: number;
    hsnCode?: string;
  };
  shippingDimensions?: {
    weight?: number;
    length?: number;
    width?: number;
    height?: number;
  };
  variants?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "productVariant";
  }>;
  images?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "productImage";
  }>;
  isAvailable?: boolean;
  featured?: boolean;
  category?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "category";
  };
  brand?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "brand";
  };
  discount?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "discount";
  };
  reviews?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "productReview";
  }>;
  relatedProducts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "relatedProduct";
  }>;
};

export type Discount = {
  _id: string;
  _type: "discount";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  code?: string;
  type?: "percentage" | "amount" | "bxgy" | "free_shipping";
  value?: number;
  minOrderValue?: number;
  maxDiscount?: number;
  startDate?: string;
  endDate?: string;
  isActive?: boolean;
  usageLimit?: {
    totalUses?: number;
    perCustomer?: number;
  };
  applicableTo?: {
    products?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "product";
    }>;
    categories?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "category";
    }>;
    brands?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "brand";
    }>;
  };
  exclusions?: {
    products?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "product";
    }>;
    categories?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "category";
    }>;
    brands?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "brand";
    }>;
  };
};

export type Brand = {
  _id: string;
  _type: "brand";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  description?: string;
  website?: string;
  founded?: string;
  country?: string;
  featured?: boolean;
  status?: "active" | "inactive";
  socialMedia?: {
    facebook?: string;
    instagram?: string;
    twitter?: string;
    linkedin?: string;
  };
};

export type Subcategory = {
  _id: string;
  _type: "subcategory";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  parentCategory?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "category";
  };
  displayOrder?: number;
  isActive?: boolean;
  featured?: boolean;
  seo?: {
    metaTitle?: string;
    metaDescription?: string;
    keywords?: Array<string>;
  };
};

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  icon?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  subcategories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "subcategory";
  }>;
  displayOrder?: number;
  isActive?: boolean;
  featured?: boolean;
  seo?: {
    metaTitle?: string;
    metaDescription?: string;
    keywords?: Array<string>;
  };
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type BlockContent = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
      listItem?: "bullet";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }
  | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    }
>;

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Color = {
  _type: "color";
  hex?: string;
  alpha?: number;
  hsl?: HslaColor;
  hsv?: HsvaColor;
  rgb?: RgbaColor;
};

export type RgbaColor = {
  _type: "rgbaColor";
  r?: number;
  g?: number;
  b?: number;
  a?: number;
};

export type HsvaColor = {
  _type: "hsvaColor";
  h?: number;
  s?: number;
  v?: number;
  a?: number;
};

export type HslaColor = {
  _type: "hslaColor";
  h?: number;
  s?: number;
  l?: number;
  a?: number;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | Banner
  | Page
  | Cart
  | OrderItem
  | Order
  | ShippingMethod
  | Payment
  | Address
  | RelatedProduct
  | ProductWishlist
  | ReviewImage
  | ProductReview
  | User
  | VariantStock
  | ProductImage
  | ProductVariantValue
  | ProductVariant
  | Product
  | Discount
  | Brand
  | Subcategory
  | Category
  | Slug
  | BlockContent
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Color
  | RgbaColor
  | HsvaColor
  | HslaColor;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/app/api/products/route.ts
// Variable: productsQuery
// Query: *[_type == "product"] {  _id,  _createdAt,  name,  "slug": slug.current,  description,  price,  salesPrice,  sku,  baseStock,  isAvailable,  featured,  "category": category->{ _id, name, "slug": slug.current },  "brand": brand->{ _id, name, "slug": slug.current },  "images": images[]->{     _id,    title,    "urls": images[].asset->url,    "altText": altText  },  "variants": variants[]->{     _id,    size,    price,    salesPrice,    "stocks": variantStocks[] {      color,      "hexCode": hexCode.hex,      stock,      "images": images[].asset->url    }  },  seo {    metaTitle,    metaDescription,    keywords  }} | order(_createdAt desc)
export type ProductsQueryResult = Array<{
  _id: string;
  _createdAt: string;
  name: string | null;
  slug: string | null;
  description: string | null;
  fullDescription: string | null;
  price: number | null;
  salesPrice: number | null;
  sku: string | null;
  shippingDimensions: {
    weight: number;
    length: number;
    width: number;
    height: number;
  } | null;
  taxInfo: {
    taxCategory: "standard" | "reduced" | "zero" | "exempt";
    taxRate: number;
    hsnCode: string;
  } | null;
  baseStock: number;
  isAvailable: boolean;
  featured: boolean;
  category: {
    _id: string;
    title: string | null;
    slug: string | null;
    subcategories: Array<{
      _id: string;
      name: string | null;
      slug: string | null;
    }> | null;
  } | null;
  brand: {
    _id: string;
    name: string | null;
    slug: string | null;
  } | null;
  images: Array<{
    _id: string;
    title: string | null;
    urls: Array<string>;
    altText: Array<string>;
  }> | null;
  variants: Array<{
    _id: string;
    size: string | null;
    price: number | null;
    salesPrice: number | null;
    stocks: Array<{
      color: string | null;
      hexCode: string | null;
      stock: number;
      images: Array<string>;
    }>;
  }> | null;
  reviews: Array<{
    _id: string;
    reviewTitle: string | null;
    rating: number;
    reviewDetails: string | null;
    verifiedPurchase: boolean;
    helpfulVotes: number;
    reviewDate: string | null;
    user: {
      firstName: string | null;
      lastName: string | null;
      email: string | null;
    } | null;
    images: Array<{
      title: string | null;
      urls: Array<string>;
      altText: Array<string>;
    }> | null;
  }> | null;
  seo: {
    metaTitle: string | null;
    metaDescription: string | null;
    keywords: Array<string> | null;
  } | null;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    '*[_type == "product"] {\n  _id,\n  _createdAt,\n  name,\n  "slug": slug.current,\n  description,\n  price,\n  salesPrice,\n  sku,\n  baseStock,\n  isAvailable,\n  featured,\n  "category": category->{ _id, name, "slug": slug.current },\n  "brand": brand->{ _id, name, "slug": slug.current },\n  "images": images[]->{ \n    _id,\n    title,\n    "urls": images[].asset->url,\n    "altText": altText\n  },\n  "variants": variants[]->{ \n    _id,\n    size,\n    price,\n    salesPrice,\n    "stocks": variantStocks[] {\n      color,\n      "hexCode": hexCode.hex,\n      stock,\n      "images": images[].asset->url\n    }\n  },\n  seo {\n    metaTitle,\n    metaDescription,\n    keywords\n  }\n} | order(_createdAt desc)': ProductsQueryResult;
  }
}
